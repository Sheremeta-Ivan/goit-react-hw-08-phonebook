{"version":3,"file":"static/js/102.f3a42ce0.chunk.js","mappings":"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","sources":["redux/contacts/selectors.jsx","redux/filter/selectors.jsx","components/contacts/ContactList.styles.js","components/contacts/ContactList.jsx","components/filter/Filter.styles.js","components/filter/Filter.jsx","components/form/ContactForm.styles.js","components/form/ContactForm.jsx","pages/ContactsPage/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n","export const selectContactsFilter = state => state.filters.filter;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  padding: 10px;\n`;\n\nexport const ContactItem = styled.li`\n  margin-bottom: 10px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  background-color: #fff;\n  border: solid 1px #787878;\n  border-radius: 5px;\n`;\n\nexport const ContactIcon = styled.div`\n  margin-right: 15px;\n  border: 1px solid #787878;\n  border-radius: 4px;\n  width: 27px;\n  height: 27px;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const ContactText = styled.p`\n  font-size: 24px;\n\n  span {\n    text-decoration: underline;\n  }\n`;\n\nexport const ContactDelete = styled.button`\n  padding: 5px;\n  color: black;\n  margin-right: 0;\n  margin-left: auto;\n  border: none;\n  border-radius: 5px;\n  height: 40px;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n\n  svg {\n    width: 25px;\n    height: 25px;\n  }\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 255, 255);\n    background-color: red;\n    cursor: pointer;\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { selectContactsFilter } from '../../redux/filter/selectors';\nimport { IoPersonOutline, IoClose } from 'react-icons/io5';\nimport {\n  ContactsList,\n  ContactItem,\n  ContactIcon,\n  ContactText,\n  ContactDelete,\n} from './ContactList.styles';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filterValue = useSelector(selectContactsFilter).toLowerCase();\n\n  const dispatch = useDispatch();\n\n  const handleDelete = evt => {\n    dispatch(deleteContact(evt.currentTarget.id));\n  };\n\n  const getVisibilityContacts = () => {\n    if (!filterValue || filterValue === '') {\n      return contacts;\n    }\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValue)\n    );\n  };\n\n  const visibilityContacts = getVisibilityContacts();\n\n  return (\n    <ContactsList>\n      {visibilityContacts.map(contact => (\n        <ContactItem key={contact.id}>\n          <ContactIcon>\n            <IoPersonOutline />\n          </ContactIcon>\n          <ContactText>\n            {contact.name}: <span>{contact.number}</span>\n          </ContactText>\n          <ContactDelete type=\"button\" id={contact.id} onClick={handleDelete}>\n            <IoClose />\n          </ContactDelete>\n        </ContactItem>\n      ))}\n    </ContactsList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n  color: white;\n  font-weight: 600;\n\n  input {\n    padding: 8px;\n    border-radius: 5px;\n    border: 1px solid grey;\n  }\n`;\nexport const Text = styled.p`\n  margin-top: 10px;\n  margin-bottom: 8px;\n  font-size: 25px;\n  color: #fff;\n  text-align: center;\n  font-weight: 700;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterLabel } from './Filter.styles';\nimport { setFilterContacts } from '../../redux/filter/slice';\nimport { Text } from './Filter.styles';\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const handlerFilter = evt => {\n    dispatch(setFilterContacts(evt.target.value));\n  };\n\n  return (\n    <>\n      <Text>Contacts</Text>\n      <FilterLabel>\n        Find contact by the name\n        <input type=\"text\" name=\"filter\" onChange={handlerFilter} />\n      </FilterLabel>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  max-width: 740px;\n`;\n\nexport const Form = styled.form`\n  margin-bottom: 20px;\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n\n  input {\n    padding: 8px;\n    border-radius: 5px;\n    border: 1px solid grey;\n  }\n`;\n\nexport const FormList = styled.ul`\n  padding: 0;\n  display: flex;\n`;\n\nexport const FormListItem = styled.li`\n  margin-right: 10px;\n  list-style: none;\n  p {\n    margin-bottom: 8px;\n    font-size: 25px;\n    color: #fff;\n    font-weight: 500;\n  }\n`;\n\nexport const FormButton = styled.button`\n  border-radius: 5px;\n  height: 40px;\n  border: none;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  padding: 5px;\n\n  &:hover,\n  &:focus {\n    color: rgb(255, 255, 255);\n    background-color: teal;\n    cursor: pointer;\n  }\n\n  svg {\n    margin-right: 10px;\n    width: 25px;\n    height: 25px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { toast } from 'react-toastify';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { IoPersonAdd } from 'react-icons/io5';\nimport { Form, FormList, FormListItem, FormButton } from './ContactForm.styles';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  function handlerSubmit(evt) {\n    evt.preventDefault();\n    const form = evt.target;\n    const name = form.name.value;\n    const number = form.number.value;\n\n    const isInContacts = contacts.some(\n      contact => contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n    );\n    if (isInContacts) {\n      toast.warn(`${name} is already in contacts`, {\n        position: toast.POSITION.TOP_RIGHT,\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    form.reset();\n  }\n\n  return (\n    <Form onSubmit={handlerSubmit}>\n      <FormList>\n        <FormListItem>\n          <p>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </FormListItem>\n        <FormListItem>\n          <p>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </FormListItem>\n      </FormList>\n\n      <FormButton type=\"submit\">\n        <IoPersonAdd />\n        Add contact\n      </FormButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { ContactList } from 'components/contacts/ContactList';\nimport { Filter } from 'components/filter/Filter';\nimport ContactForm from 'components/form/ContactForm';\nimport { selectIsLoading, selectError } from '../../redux/contacts/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <ContactForm />\n\n      <Filter />\n      {isLoading && !error && (\n        <ThreeDots\n          height=\"80\"\n          width=\"80\"\n          radius=\"9\"\n          color=\"teal\"\n          ariaLabel=\"three-dots-loading\"\n          wrapperStyle={{}}\n          wrapperClassName=\"\"\n          visible={true}\n        />\n      )}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","filter","ContactsList","styled","ContactItem","ContactIcon","ContactText","ContactDelete","ContactList","useSelector","filterValue","toLowerCase","dispatch","useDispatch","handleDelete","evt","deleteContact","currentTarget","id","visibilityContacts","contact","name","includes","map","number","type","onClick","FilterLabel","Text","Filter","onChange","setFilterContacts","target","value","Form","FormList","FormListItem","FormButton","onSubmit","preventDefault","form","some","trim","toast","position","addContact","reset","pattern","title","required","useEffect","fetchContacts","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible"],"sourceRoot":""}